{"remainingRequest":"/Users/mac/projects/portofolio/portfolio/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/projects/portofolio/portfolio/src/components/SkillSection.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mac/projects/portofolio/portfolio/src/components/SkillSection.vue","mtime":1614973297000},{"path":"/Users/mac/projects/portofolio/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/projects/portofolio/portfolio/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/mac/projects/portofolio/portfolio/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mac/projects/portofolio/portfolio/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ProficiencyBar from '@/components/ProficiencyBar.vue';\n\nexport default {\n    name: 'SkillSection',\n    props: ['skills'],\n    components: {\n        ProficiencyBar\n    },\n    methods: {            \n        groupBy(array, property) {\n            return array.reduce(function(groups, obj) {\n                let key = obj[property];\n                if(!groups[key]) {\n                    groups[key] = [];\n                }\n\n                groups[key].push(obj);\n                return groups;\n            }, {});                \n        }\n    },\n    computed: {\n        categories() {\n            return this.groupBy(this.skills, \"category\");\n        }\n    },\n    mounted() {\n        // sort by skill proficieny level in descending order\n        this.skills.sort((a, b) => {\n            return b.proficiency_level - a.proficiency_level;\n        });\n    }\n};\n",{"version":3,"sources":["SkillSection.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SkillSection.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <section>        \n        <hr>\n        <h2>Skills</h2>\n        <section>\n            <div class=\"category-group\" v-for=\"(skills, category) in categories\" :key=\"category.id\">\n                <h3>{{ category }}</h3>\n                <div class=\"skill-container\">\n                    <section class=\"skill-card\" v-for=\"skill in skills\" :key=\"skill.id\">\n                        <!-- Probably should create a component for this section and the proficiency bar -->                \n                        <div class=\"image-container\">\n                            <img :src=\"'assets/' + skill.image_url\" :alt=\"skill.name\" >\n                        </div>\n                        <h5>{{ skill.name }}</h5>\n                        <ProficiencyBar :value=\"skill.proficiency_level\" />              \n                    </section>\n                </div>\n            </div> \n            <!-- Printer friendly skill section -->\n            <div class=\"category-group--printer-friendly\" v-for=\"(skills, category) in categories\" :key=\"category.id\">\n                <strong>{{ category }}</strong>\n                <div v-for=\"(skill, index) in skills\" :key=\"skill.id\">\n                    <span class=\"category-group-skill\">\n                        {{ skill.name }}           \n                    </span>\n                    <span class=\"category-group-comma\" v-if=\"index != skills.length - 1\">,</span> \n                </div>\n            </div>            \n        </section>        \n    </section>\n</template>\n<script>\n    import ProficiencyBar from '@/components/ProficiencyBar.vue';\n\n    export default {\n        name: 'SkillSection',\n        props: ['skills'],\n        components: {\n            ProficiencyBar\n        },\n        methods: {            \n            groupBy(array, property) {\n                return array.reduce(function(groups, obj) {\n                    let key = obj[property];\n                    if(!groups[key]) {\n                        groups[key] = [];\n                    }\n\n                    groups[key].push(obj);\n                    return groups;\n                }, {});                \n            }\n        },\n        computed: {\n            categories() {\n                return this.groupBy(this.skills, \"category\");\n            }\n        },\n        mounted() {\n            // sort by skill proficieny level in descending order\n            this.skills.sort((a, b) => {\n                return b.proficiency_level - a.proficiency_level;\n            });\n        }\n    };\n</script>\n<style>\n    h5 {\n        font-weight: normal;\n        margin: 5px;\n    }\n\n    .category-group {\n        display: flex;\n        flex-direction: column;\n        margin-bottom: 2rem;\n    }\n\n    .category-group--printer-friendly {\n        display: none;\n    }\n\n    .skill-container {\n        display: flex;\n        flex-flow: row wrap;\n    }\n\n    .skill-card {\n        border-radius: 1px;\n        border: 1px solid midnightblue;\n        margin: 5px;\n        word-wrap: break-word;\n        width: 105px;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n    }\n\n    .image-container {\n        display: flex;\n        justify-content: center;\n    }\n\n    .image-container > img {\n        height: 105px;\n        width: 105px;\n        background-position: 50% 50%;\n        background-size: cover;\n        object-fit: cover;\n        margin: 5px;\n    }\n\n    @media print {\n        .category-group {\n            display: none;\n        }\n\n        .category-group--printer-friendly {\n            display: flex;\n            flex-direction: row;\n            flex-wrap: wrap;\n        }\n\n        .category-group--printer-friendly div {\n            display: flex;\n            flex-direction: row;\n        }\n\n        .category-group-skill {\n            margin-left: 0.25rem;\n        }\n    }\n</style>"]}]}